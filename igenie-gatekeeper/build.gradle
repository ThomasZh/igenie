
//--------- get parameter value from command line input 
//--------- save a project level property for plug use
loadConfiguration()

def loadConfiguration() {
    def environment = hasProperty('env') ? env : 'dev'
    project.ext.set("environment", environment)
    project.ext.set("distVersion", "2.2.0")//distribution version number
}

//----------------------------------
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin:'application'
apply from: 'tasks.gradle'

group = 'igenie-gatekeeper'
version = project.distVersion
mainClassName = "com.oct.ga.gatekeeper.GateKeeper"


processResources.dependsOn copyConfiguration
installApp.dependsOn modscript

jar {
    manifest {
        attributes 'Implementation-Title': 'gatekeeper server', 'Implementation-Version': version
    }

    exclude '**/config.properties'   
    exclude '**/jdbc.properties'   
}

repositories {
   mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
//        resources {
//            srcDir 'conf'
//        }
    }
     
}


dependencies {

	compile project(':igenie-comm')
	compile project(':igenie-stp-base')
	compile project(':igenie-sup-base')
	
	compile fileTree(dir: 'lib', include: '*.jar')
    
	compile 'junit:junit:4.11'

    compile 'org.apache.commons:commons-email:1.3.2'
    compile 'org.apache.mina:mina-core:2.0.7'
    compile 'org.apache.mina:mina-example:2.0.7'
    
	compile 'org.slf4j:slf4j-log4j12:1.6.6'
	compile 'com.mchange:c3p0:0.9.5-pre8'
    compile 'mysql:mysql-connector-java:5.1.30'
    
    compile 'commons-beanutils:commons-beanutils:1.8.0'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'net.sf.ezmorph:ezmorph:1.0.6'
    
    
}

